---
swagger: '2.0'
info:
  title: tests_api
  version: v1.0
paths:
  "/api/admin/tests/":
    get:
      summary: Retrieves tests
      tags:
      - Tests
      produces:
      - application/json
      parameters:
      - name: limit
        in: query
        type: integer
        required: false
        description: Number of results to return per page.
      - name: offset
        in: query
        type: integer
        required: false
        description: The initial index from which to return the results.
      - name: lesson_uuid
        in: query
        type: string
        required: false
        description: Filter results by lesson_uuid.
      responses:
        '200':
          description: A list of tests.
          schema:
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                nullable: true
              previous:
                type: string
                nullable: true
              results:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                    lesson_uuid:
                      type: string
                    questions:
                      type: array
                      items:
                        type: object
                        properties:
                          uuid:
                            type: string
                          question_type:
                            type: string
                          content:
                            type: string
                          choices:
                            type: array
                            items:
                              type: object
                              properties:
                                answer:
                                  type: string
                                correct:
                                  type: boolean
                              required:
                              - answer
                              - correct
                        required:
                        - uuid
                        - question_type
                        - content
                        - choices
                  required:
                  - uuid
                  - lesson_uuid
                  - questions
            required:
            - count
            - next
            - previous
            - results
          examples:
            application/json:
              count: 1
              next: 
              previous: 
              results:
              - uuid: 34fde577-2360-4dd9-8aa3-a0d32b799336
                lesson_uuid: cf48df3b-ae86-464e-acd7-6cdca498fa8a
                questions:
                - uuid: 95639f83-9600-4637-903a-c5b08d2f4e7c
                  question_type: binary
                  content: Voluptate repellat ut deserunt?
                  choices:
                  - answer: totam
                    correct: true
                  - answer: est
                    correct: false
    post:
      summary: Creates a test
      tags:
      - Tests
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: payload
        in: body
        schema:
          type: object
          properties:
            lesson_uuid:
              type: string
            questions:
              type: array
              items:
                type: object
                properties:
                  question_type:
                    type: string
                  content:
                    type: string
                  choices:
                    type: array
                    items:
                      type: object
                      properties:
                        answer:
                          type: string
                        correct:
                          type: boolean
                      required:
                      - answer
                      - correct
                required:
                - question_type
                - content
                - choices
          required:
          - lesson_uuid
          - questions
      responses:
        '201':
          description: Test created.
          schema:
            type: object
            properties:
              uuid:
                type: string
              lesson_uuid:
                type: string
              questions:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                    question_type:
                      type: string
                    content:
                      type: string
                    choices:
                      type: array
                      items:
                        type: object
                        properties:
                          answer:
                            type: string
                          correct:
                            type: boolean
                        required:
                        - answer
                        - correct
                  required:
                  - uuid
                  - question_type
                  - content
                  - choices
            required:
            - uuid
            - lesson_uuid
            - questions
          examples:
            application/json:
              uuid: 34fde577-2360-4dd9-8aa3-a0d32b799336
              lesson_uuid: cf48df3b-ae86-464e-acd7-6cdca498fa8a
              questions:
              - uuid: 95639f83-9600-4637-903a-c5b08d2f4e7c
                question_type: binary
                content: Voluptate repellat ut deserunt?
                choices:
                - answer: totam
                  correct: true
                - answer: est
                  correct: false
        '400':
          description: Validation failed.
          schema:
            type: object
            properties:
              subject:
                type: array
                items:
                  type: string
              lesson_uuid:
                type: array
                items:
                  type: string
              question_type:
                type: array
                items:
                  type: string
              question:
                type: array
                items:
                  type: string
              choices:
                type: array
                items:
                  type: string
          examples:
            application/json:
              lesson_uuid:
              - can't be blank
  "/api/admin/tests/{uuid}":
    get:
      summary: Retrieves a test
      tags:
      - Tests
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        type: string
        required: true
      responses:
        '200':
          description: A Test object.
          schema:
            type: object
            properties:
              uuid:
                type: string
              lesson_uuid:
                type: string
              questions:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                    question_type:
                      type: string
                    content:
                      type: string
                    choices:
                      type: array
                      items:
                        type: object
                        properties:
                          answer:
                            type: string
                          correct:
                            type: boolean
                        required:
                        - answer
                        - correct
                  required:
                  - uuid
                  - question_type
                  - content
                  - choices
            required:
            - uuid
            - lesson_uuid
            - questions
          examples:
            application/json:
              uuid: 34fde577-2360-4dd9-8aa3-a0d32b799336
              lesson_uuid: cf48df3b-ae86-464e-acd7-6cdca498fa8a
              questions:
              - uuid: 95639f83-9600-4637-903a-c5b08d2f4e7c
                question_type: binary
                content: Voluptate repellat ut deserunt?
                choices:
                - answer: totam
                  correct: true
                - answer: est
                  correct: false
        '404':
          description: Not found.
          schema:
            type: object
            properties:
              detail:
                type: string
            required:
            - detail
          examples:
            application/json:
              detail: Not found.
    put:
      summary: Updates a test
      tags:
      - Tests
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        type: string
        required: true
      - name: payload
        in: body
        schema:
          type: object
          properties:
            lesson_uuid:
              type: string
            questions:
              type: array
              items:
                type: object
                properties:
                  uuid:
                    type: string
                  _delete:
                    type: boolean
                  question_type:
                    type: string
                  content:
                    type: string
                  choices:
                    type: array
                    items:
                      type: object
                      properties:
                        answer:
                          type: string
                        correct:
                          type: boolean
      responses:
        '200':
          description: Test updated.
          schema:
            type: object
            properties:
              uuid:
                type: string
              lesson_uuid:
                type: string
              questions:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                    question_type:
                      type: string
                    content:
                      type: string
                    choices:
                      type: array
                      items:
                        type: object
                        properties:
                          answer:
                            type: string
                          correct:
                            type: boolean
                        required:
                        - answer
                        - correct
                  required:
                  - uuid
                  - question_type
                  - content
                  - choices
            required:
            - uuid
            - lesson_uuid
            - questions
          examples:
            application/json:
              uuid: 34fde577-2360-4dd9-8aa3-a0d32b799336
              lesson_uuid: cf48df3b-ae86-464e-acd7-6cdca498fa8a
              questions:
              - uuid: 95639f83-9600-4637-903a-c5b08d2f4e7c
                question_type: binary
                content: Voluptate repellat ut deserunt?
                choices:
                - answer: totam
                  correct: true
                - answer: est
                  correct: false
        '400':
          description: Validation failed.
          schema:
            type: object
            properties:
              subject:
                type: array
                items:
                  type: string
              lesson_uuid:
                type: array
                items:
                  type: string
              question_type:
                type: array
                items:
                  type: string
              question:
                type: array
                items:
                  type: string
              choices:
                type: array
                items:
                  type: string
          examples:
            application/json:
              lesson_uuid:
              - can't be blank
        '404':
          description: Not found.
          schema:
            type: object
            properties:
              detail:
                type: string
            required:
            - detail
          examples:
            application/json:
              detail: Not found.
    delete:
      summary: Destroys a test
      tags:
      - Tests
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        type: string
        required: true
      responses:
        '204':
          description: Test deleted.
        '404':
          description: Not found.
          schema:
            type: object
            properties:
              detail:
                type: string
            required:
            - detail
          examples:
            application/json:
              detail: Not found.
  "/api/tests/":
    get:
      summary: Retrieves tests
      tags:
      - Tests
      produces:
      - application/json
      parameters:
      - name: limit
        in: query
        type: integer
        required: false
        description: Number of results to return per page.
      - name: offset
        in: query
        type: integer
        required: false
        description: The initial index from which to return the results.
      - name: lesson_uuid
        in: query
        type: string
        required: false
        description: Filter results by lesson_uuid.
      responses:
        '200':
          description: A list of tests.
          schema:
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                nullable: true
              previous:
                type: string
                nullable: true
              results:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                    lesson_uuid:
                      type: string
                    questions:
                      type: array
                      items:
                        type: object
                        properties:
                          uuid:
                            type: string
                          question_type:
                            type: string
                          content:
                            type: string
                          choices:
                            type: array
                            items:
                              type: object
                              properties:
                                answer:
                                  type: string
                              required:
                              - answer
                        required:
                        - uuid
                        - question_type
                        - content
                        - choices
                  required:
                  - uuid
                  - lesson_uuid
                  - questions
            required:
            - count
            - next
            - previous
            - results
          examples:
            application/json:
              count: 1
              next: 
              previous: 
              results:
              - uuid: 34fde577-2360-4dd9-8aa3-a0d32b799336
                lesson_uuid: cf48df3b-ae86-464e-acd7-6cdca498fa8a
                questions:
                - uuid: 95639f83-9600-4637-903a-c5b08d2f4e7c
                  question_type: binary
                  content: Voluptate repellat ut deserunt?
                  choices:
                  - answer: totam
                  - answer: est
  "/api/tests/{uuid}":
    get:
      summary: Retrieves a test
      tags:
      - Tests
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        type: string
        required: true
      responses:
        '200':
          description: A Test object.
          schema:
            type: object
            properties:
              uuid:
                type: string
              lesson_uuid:
                type: string
              questions:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                    question_type:
                      type: string
                    content:
                      type: string
                    choices:
                      type: array
                      items:
                        type: object
                        properties:
                          answer:
                            type: string
                        required:
                        - answer
                  required:
                  - uuid
                  - question_type
                  - content
                  - choices
            required:
            - uuid
            - lesson_uuid
            - questions
          examples:
            application/json:
              uuid: 34fde577-2360-4dd9-8aa3-a0d32b799336
              lesson_uuid: cf48df3b-ae86-464e-acd7-6cdca498fa8a
              questions:
              - uuid: 95639f83-9600-4637-903a-c5b08d2f4e7c
                question_type: binary
                content: Voluptate repellat ut deserunt?
                choices:
                - answer: totam
                - answer: est
        '404':
          description: Not found.
          schema:
            type: object
            properties:
              detail:
                type: string
            required:
            - detail
          examples:
            application/json:
              detail: Not found.
  "/api/tests/{uuid}/scores":
    post:
      summary: Creates a score for a test
      tags:
      - Tests
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        type: string
        required: true
      - name: payload
        in: body
        schema:
          type: object
          properties:
            answers:
              type: array
              items:
                type: object
                properties:
                  question_uuid:
                    type: string
                  selected_choices:
                    type: array
                    items:
                      type: string
                required:
                - question_uuid
                - selected_choices
          required:
          - answers
      responses:
        '201':
          description: Score created
          schema:
            type: object
            properties:
              score:
                type: string
              results:
                type: array
                items:
                  type: object
                  properties:
                    question_uuid:
                      type: string
                    correct:
                      type: boolean
                  required:
                  - question_uuid
                  - correct
            required:
            - score
            - results
          examples:
            application/json:
              score: 0/1
              results:
              - question_uuid: 0f99f648-72ab-4726-abb7-c7f4bba59925
                correct: false
        '404':
          description: Not found.
          schema:
            type: object
            properties:
              detail:
                type: string
            required:
            - detail
          examples:
            application/json:
              detail: Not found.
        '400':
          description: Validation failed.
          schema:
            type: object
            properties:
              answers:
                type: array
                items:
                  type: string
            required:
            - answers
          examples:
            application/json:
              answers:
              - is missing
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
